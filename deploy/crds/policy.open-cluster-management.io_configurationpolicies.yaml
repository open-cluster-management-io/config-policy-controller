---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    policy.open-cluster-management.io/policy-type: template
  name: configurationpolicies.policy.open-cluster-management.io
spec:
  group: policy.open-cluster-management.io
  names:
    kind: ConfigurationPolicy
    listKind: ConfigurationPolicyList
    plural: configurationpolicies
    singular: configurationpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.compliant
      name: Compliance state
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          ConfigurationPolicy is the schema for the configurationpolicies API. A configuration policy
          contains, in whole or in part, an object definition to compare with objects on the cluster. If
          the definition of the configuration policy doesn't match the objects on the cluster, a
          noncompliant status is displayed. Furthermore, if the RemediationAction is set to `enforce` and
          the name of the object is available, the configuration policy controller creates or updates the
          object to match in order to make the configuration policy compliant.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ConfigurationPolicySpec defines the desired configuration of objects on the cluster, along with
              how the controller should handle when the cluster doesn't match the configuration policy.
            oneOf:
            - required:
              - object-templates
            - required:
              - object-templates-raw
            properties:
              customMessage:
                description: |-
                  CustomMessage configures the compliance messages emitted by the configuration policy, to use one
                  of the specified Go templates based on the current compliance. The data passed to the templates
                  include a `.DefaultMessage` string variable which matches the message that would be emitted if no
                  custom template was defined, and a `.Policy` object variable which contains the full current
                  state of the policy. If the policy is using Kubernetes API watches (default but can be configured
                  with EvaluationInterval), and the object exists, then the full state of each related object will
                  be available at `.Policy.status.relatedObjects[*].object`. Otherwise, only the identifier
                  information will be available there.
                properties:
                  compliant:
                    description: Compliant is the template used for the compliance
                      message when the policy is compliant.
                    type: string
                  noncompliant:
                    description: |-
                      NonCompliant is the template used for the compliance message when the policy is not compliant,
                      including when the status is unknown.
                    type: string
                type: object
              evaluationInterval:
                description: |-
                  EvaluationInterval configures the minimum elapsed time before a configuration policy is
                  reevaluated. The default value is `watch` to leverage Kubernetes API watches instead of polling the Kubernetes API
                  server. If the policy spec is changed or if the list of namespaces selected by the policy changes, the policy might
                  be evaluated regardless of the settings here.
                properties:
                  compliant:
                    description: |-
                      Compliant is the minimum elapsed time before a configuration policy is reevaluated when in the
                      compliant state. Set this to `never` to disable reevaluation when in the compliant state. The default value is
                      `watch`.
                    pattern: ^(?:(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))|never|watch)+$
                    type: string
                  noncompliant:
                    description: |-
                      NonCompliant is the minimum elapsed time before a configuration policy is reevaluated when in the noncompliant
                      state. Set this to `never` to disable reevaluation when in the noncompliant state. The default value is `watch`.
                    pattern: ^(?:(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))|never|watch)+$
                    type: string
                type: object
              namespaceSelector:
                description: |-
                  NamespaceSelector defines the list of namespaces to include or exclude for objects defined in
                  `spec["object-templates"]`. All selector rules are combined. If 'include' is not provided but
                  `matchLabels` and/or `matchExpressions` are, `include` will behave as if `['*']` were given. If
                  `matchExpressions` and `matchLabels` are both not provided, `include` must be provided to
                  retrieve namespaces.
                properties:
                  exclude:
                    description: Exclude is an array of filepath expressions to exclude
                      objects by name.
                    items:
                      minLength: 1
                      type: string
                    type: array
                  include:
                    description: Include is an array of filepath expressions to include
                      objects by name.
                    items:
                      minLength: 1
                      type: string
                    type: array
                  matchExpressions:
                    description: MatchExpressions is an array of label selector requirements
                      matching objects by label.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels is a map of {key,value} pairs matching
                      objects by label.
                    type: object
                type: object
              object-templates:
                description: |-
                  The `object-templates` is an array of object configurations for the configuration policy to
                  check, create, modify, or delete objects on the cluster. Keys inside of the objectDefinition in
                  an object template may point to values that have Go templates. For more advanced Go templating
                  such as `range` loops and `if` conditionals, use `object-templates-raw`. Only one of
                  `object-templates` and `object-templates-raw` can be set in a configuration policy. For more on
                  the Go templates, see https://github.com/stolostron/go-template-utils/blob/main/README.md.
                items:
                  description: ObjectTemplate describes the desired state of an object
                    on the cluster.
                  properties:
                    complianceType:
                      description: |-
                        ComplianceType describes how objects on the cluster should be compared with the object definition
                        of the configuration policy. The supported options are `MustHave`, `MustOnlyHave`, or
                        `MustNotHave`.
                      enum:
                      - MustHave
                      - Musthave
                      - musthave
                      - MustOnlyHave
                      - Mustonlyhave
                      - mustonlyhave
                      - MustNotHave
                      - Mustnothave
                      - mustnothave
                      type: string
                    metadataComplianceType:
                      description: |-
                        MetadataComplianceType describes how the labels and annotations of objects on the cluster should
                        be compared with the object definition of the configuration policy. The supported options are
                        `MustHave` or `MustOnlyHave`. The default value is the value defined in `complianceType` for the
                        object template.
                      enum:
                      - MustHave
                      - Musthave
                      - musthave
                      - MustOnlyHave
                      - Mustonlyhave
                      - mustonlyhave
                      type: string
                    objectDefinition:
                      description: ObjectDefinition defines required fields to be
                        compared with objects on the cluster.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    recordDiff:
                      description: |-
                        RecordDiff specifies whether and where to log the difference between the object on the cluster
                        and the `objectDefinition` parameter in the policy. The supported options are `InStatus` to
                        record the difference in the policy status field, `Log` to log the difference in the
                        `config-policy-controller` pod, and `None` to not log the difference. The default value is
                        `None` for object kinds that include sensitive data such as `ConfigMap`, `OAuthAccessToken`,
                        `OAuthAuthorizeTokens`, `Route`, and `Secret`, or when a templated `objectDefinition`
                        references sensitive data. For all other kinds, the default value is `InStatus`.
                      enum:
                      - Log
                      - InStatus
                      - None
                      type: string
                    recreateOption:
                      default: None
                      description: |-
                        RecreateOption describes when to delete and recreate an object when an update is required. When you set the
                        object to `IfRequired`, the policy recreates the object when updating an immutable field. When you set the
                        parameter to `Always`, the policy recreates the object on any update. When you set the `remediationAction` to
                        `inform`, the parameter value, `recreateOption`, has no effect on the object. The `IfRequired` value has no
                        effect on clusters without dry-run update support. The default value is `None`.
                      enum:
                      - None
                      - IfRequired
                      - Always
                      type: string
                  required:
                  - complianceType
                  - objectDefinition
                  type: object
                type: array
              object-templates-raw:
                description: |-
                  The `object-templates-raw` is a string containing Go templates that must ultimately produce an
                  array of object configurations in YAML format to be used as `object-templates`. Only one of
                  `object-templates` and `object-templates-raw` can be set in a configuration policy. For more on
                  the Go templates, see https://github.com/stolostron/go-template-utils/blob/main/README.md.
                type: string
              pruneObjectBehavior:
                default: None
                description: |-
                  PruneObjectBehavior is used to remove objects that are managed by the policy upon either case: a
                  change to the policy that causes an object to no longer be managed by the policy, or the deletion
                  of the policy.
                enum:
                - DeleteAll
                - DeleteIfCreated
                - None
                type: string
              remediationAction:
                description: |-
                  RemediationAction is the remediation of the policy. The parameter values are `enforce` and
                  `inform`.
                enum:
                - Inform
                - inform
                - Enforce
                - enforce
                type: string
              severity:
                description: |-
                  Severity is a user-defined severity for when an object is noncompliant with this configuration
                  policy. The supported options are `low`, `medium`, `high`, and `critical`.
                enum:
                - low
                - Low
                - medium
                - Medium
                - high
                - High
                - critical
                - Critical
                type: string
            required:
            - remediationAction
            type: object
          status:
            description: |-
              ConfigurationPolicyStatus is the observed status of the configuration policy from its object
              definitions.
            properties:
              compliancyDetails:
                description: |-
                  CompliancyDetails is a list of statuses matching one-to-one with each of the items in the
                  `object-templates` array.
                items:
                  description: TemplateStatus reports the compliance details from
                    the definitions in an `object-template`.
                  properties:
                    Compliant:
                      description: ComplianceState reports the observed status from
                        the definitions of the policy.
                      enum:
                      - Compliant
                      - Pending
                      - NonCompliant
                      - Terminating
                      type: string
                    Validity:
                      description: Deprecated
                      properties:
                        reason:
                          type: string
                        valid:
                          type: boolean
                      type: object
                    conditions:
                      description: Conditions contains the details from the latest
                        evaluation of the `object-template`.
                      items:
                        description: Condition contains the details of an evaluation
                          of an `object-template`.
                        properties:
                          lastTransitionTime:
                            description: LastTransitionTime is the most recent time
                              the condition transitioned to the current condition.
                            format: date-time
                            type: string
                          message:
                            description: Message is a human-readable message indicating
                              details about the condition.
                            type: string
                          reason:
                            description: Reason is a brief summary for the condition.
                            type: string
                          status:
                            description: Status is an unused field. If set, it's set
                              to `True`.
                            type: string
                          type:
                            description: Type is the type of condition. The supported
                              options are `violation` or `notification`.
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                  type: object
                type: array
              compliant:
                description: ComplianceState reports the observed status from the
                  definitions of the policy.
                enum:
                - Compliant
                - Pending
                - NonCompliant
                - Terminating
                type: string
              lastEvaluated:
                description: LastEvaluated is an ISO-8601 timestamp of the last time
                  the policy was evaluated.
                type: string
              lastEvaluatedGeneration:
                description: |-
                  LastEvaluatedGeneration is the generation of the ConfigurationPolicy object when it was last
                  evaluated.
                format: int64
                type: integer
              relatedObjects:
                description: |-
                  RelatedObjects is a list of objects processed by the configuration policy due to its
                  `object-templates`.
                items:
                  description: RelatedObject contains the details of an object matched
                    by the policy.
                  properties:
                    compliant:
                      description: Compliant represents whether the related object
                        is compliant with the definition of the policy.
                      type: string
                    object:
                      description: ObjectResource contains the identifying fields
                        of the related object.
                      properties:
                        apiVersion:
                          description: API version of the related object.
                          type: string
                        kind:
                          description: Kind of the related object.
                          type: string
                        metadata:
                          description: ObjectMetadata contains the metadata for an
                            object matched by the configuration policy.
                          properties:
                            name:
                              description: Name of the related object.
                              type: string
                            namespace:
                              description: Namespace of the related object.
                              type: string
                          type: object
                      type: object
                    properties:
                      description: Properties are additional properties of the related
                        object relevant to the configuration policy.
                      properties:
                        createdByPolicy:
                          description: |-
                            CreatedByPolicy reports whether the object was created by the configuration policy, which is
                            important when pruning is configured.
                          type: boolean
                        diff:
                          description: |-
                            Diff stores the difference between the `objectDefinition` in the policy and the object on the
                            cluster.
                          type: string
                        uid:
                          description: |-
                            UID stores the object UID to help track object ownership for deletion when pruning is
                            configured.
                          type: string
                      type: object
                    reason:
                      description: Reason is a human-readable message of why the related
                        object has a particular compliance.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
